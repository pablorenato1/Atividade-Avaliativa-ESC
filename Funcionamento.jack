class Funcionamento {
    field int level;
    field int scoreint;
    field Movimentos mover;
    field Sobreposicao sobreposicao;
    field boolean play;

    constructor Funcionamento new() {
        let level = 0;
        let scoreint = 0;
        let mover = Movimentos.new();
        let sobreposicao = Sobreposicao.new();
        let play = true;
        return this;
    }
    method void run() {
        var char tecla;
        var int blocos;
        var String score;
        let score = String.new(5);
        do Drawer.grid();
        do Output.moveCursor(21, 26);
        do Output.printString("Tower Blocks.");

        while (play) {
            do score.setInt(scoreint);
            do Output.moveCursor(1, 1);
            do Output.printString("Score:");
            do Output.printString(score);

            while (~(tecla = Constantes.KEY_SPACE())) {
                let tecla = Keyboard.keyPressed();
                do mover.move();
                do Drawer.linha(mover.getLinha(), level);
            }
            while (tecla = Constantes.KEY_SPACE()) {
                let blocos = sobreposicao.add(mover.getLinha(), level, scoreint);
                do Drawer.linha(sobreposicao.getLinha(level), level);

                do gameState(blocos);
                let tecla = 0;
                do Sys.wait(1000);
            }
        }
        return;
    }
    method void gameState(int blocos) {
        if (blocos = 0) {
            let play = false;
            do Output.moveCursor(3, 1);
            do Output.printString("Voce perdeu.");
            do Sys.wait(2000);
        }   else {
            if (level = 13) {
                let play = true;
                let scoreint = scoreint + 5;
                do sobreposicao.add(sobreposicao.getLinha(13), 0, scoreint);
                do Screen.clearScreen();
                do Drawer.grid();
                do mover.setLevel(0, blocos, scoreint);
                do Drawer.linha(sobreposicao.getLinha(13), 0);
                let level = 1;
            }   else {
                let play = true;
                let level = level + 1;
                let scoreint = scoreint + 5;
                do mover.setLevel(level, blocos, scoreint);
            }
        }
        return;
    }
    method void dispose() {
        do mover.dispose();
        do sobreposicao.dispose();
        do Memory.deAlloc(this);
        return;
    }
}